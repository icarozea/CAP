Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) C++ Intel(R) 64 Compiler Classic for applications running on Intel(R) 64, Version 2021.6.0 Build 20220226_000000

Compiler options: -I. -g -std=c++11 -O2 -xHost -qopt-report=5 -qopt-report-phase=vec -qopt-report-filter=main.cc,20-30 -c -o main.o

Begin optimization report for: main(int, char **)

    Report from: Vector optimizations [vec]


      LOOP BEGIN at main.cc(28,5) inlined into main.cc(86,13)
         remark #15388: vectorization support: reference chg.x[i] has aligned access   [ main.cc(30,24) ]
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 0.541
         remark #15300: LOOP WAS VECTORIZED
         remark #26013: Compiler has chosen to target XMM/YMM vector. Try using -qopt-zmm-usage=high to override
         remark #15448: unmasked aligned unit stride loads: 4 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 70 
         remark #15477: vector cost: 7.620 
         remark #15478: estimated potential speedup: 8.700 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at main.cc(28,5) inlined into main.cc(86,13)
      <Remainder loop for vectorization>
         remark #15388: vectorization support: reference chg.x[i] has aligned access   [ main.cc(30,24) ]
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 0.250
         remark #15301: REMAINDER LOOP WAS VECTORIZED
         remark #15448: unmasked aligned unit stride loads: 4 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 70 
         remark #15477: vector cost: 7.620 
         remark #15478: estimated potential speedup: 8.700 
         remark #15488: --- end vector cost summary ---
      LOOP END
===========================================================================

Begin optimization report for: CalculateElectricPotential(int, const Charge_Distribution &, float, float, float, float &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at main.cc(28,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between chg->x[i] (30:35) and *phi (33:9)
   remark #15346: vector dependence: assumed FLOW dependence between *phi (33:9) and chg->x[i] (30:35)
LOOP END
===========================================================================
