--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: solver.c, Line: 47, Column: 9 }
Function:        lin_solve
Args:
  - String:          ''''
  - Callee:          set_bnd
    DebugLoc:        { File: solver.c, Line: 20, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          lin_solve
    DebugLoc:        { File: solver.c, Line: 35, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '365'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: solver.c, Line: 54, Column: 5 }
Function:        diffuse
Args:
  - String:          ''''
  - Callee:          lin_solve
    DebugLoc:        { File: solver.c, Line: 35, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          diffuse
    DebugLoc:        { File: solver.c, Line: 52, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '150'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
  - String:          ' at callsite '
  - String:          diffuse
  - String:          ':'
  - Line:            '3'
  - String:          ':'
  - Column:          '5'
  - String:          ';'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: solver.c, Line: 47, Column: 9 }
Function:        diffuse
Args:
  - String:          ''''
  - Callee:          set_bnd
    DebugLoc:        { File: solver.c, Line: 20, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          diffuse
    DebugLoc:        { File: solver.c, Line: 52, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '365'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: solver.c, Line: 92, Column: 5 }
Function:        advect
Args:
  - String:          ''''
  - Callee:          set_bnd
    DebugLoc:        { File: solver.c, Line: 20, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          advect
    DebugLoc:        { File: solver.c, Line: 58, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '365'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: solver.c, Line: 123, Column: 5 }
Function:        dens_step
Args:
  - String:          ''''
  - Callee:          add_source
    DebugLoc:        { File: solver.c, Line: 11, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          dens_step
    DebugLoc:        { File: solver.c, Line: 122, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '0'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
  - String:          ' at callsite '
  - String:          dens_step
  - String:          ':'
  - Line:            '2'
  - String:          ':'
  - Column:          '5'
  - String:          ';'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: solver.c, Line: 125, Column: 5 }
Function:        dens_step
Args:
  - String:          ''''
  - Callee:          diffuse
    DebugLoc:        { File: solver.c, Line: 52, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          dens_step
    DebugLoc:        { File: solver.c, Line: 122, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '180'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
  - String:          ' at callsite '
  - String:          dens_step
  - String:          ':'
  - Line:            '4'
  - String:          ':'
  - Column:          '5'
  - String:          ';'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: solver.c, Line: 127, Column: 5 }
Function:        dens_step
Args:
  - String:          ''''
  - Callee:          advect
    DebugLoc:        { File: solver.c, Line: 58, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          dens_step
    DebugLoc:        { File: solver.c, Line: 122, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '270'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: solver.c, Line: 47, Column: 9 }
Function:        dens_step
Args:
  - String:          ''''
  - Callee:          set_bnd
    DebugLoc:        { File: solver.c, Line: 20, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          dens_step
    DebugLoc:        { File: solver.c, Line: 122, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '220'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
  - String:          ' at callsite '
  - String:          lin_solve
  - String:          ':'
  - Line:            '13'
  - String:          ':'
  - Column:          '9'
  - String:          ' @ '
  - String:          diffuse
  - String:          ':'
  - Line:            '3'
  - String:          ':'
  - Column:          '5'
  - String:          ' @ '
  - String:          dens_step
  - String:          ':'
  - Line:            '4'
  - String:          ':'
  - Column:          '5'
  - String:          ';'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: solver.c, Line: 105, Column: 5 }
Function:        project
Args:
  - String:          ''''
  - Callee:          set_bnd
    DebugLoc:        { File: solver.c, Line: 20, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          project
    DebugLoc:        { File: solver.c, Line: 96, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '220'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
  - String:          ' at callsite '
  - String:          project
  - String:          ':'
  - Line:            '10'
  - String:          ':'
  - Column:          '5'
  - String:          ';'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: solver.c, Line: 106, Column: 5 }
Function:        project
Args:
  - String:          ''''
  - Callee:          set_bnd
    DebugLoc:        { File: solver.c, Line: 20, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          project
    DebugLoc:        { File: solver.c, Line: 96, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '220'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
  - String:          ' at callsite '
  - String:          project
  - String:          ':'
  - Line:            '11'
  - String:          ':'
  - Column:          '5'
  - String:          ';'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: solver.c, Line: 108, Column: 5 }
Function:        project
Args:
  - String:          ''''
  - Callee:          lin_solve
  - String:          ''' inlined into '''
  - Caller:          project
    DebugLoc:        { File: solver.c, Line: 96, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '-14855'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
  - String:          ' at callsite '
  - String:          project
  - String:          ':'
  - Line:            '13'
  - String:          ':'
  - Column:          '5'
  - String:          ';'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: solver.c, Line: 117, Column: 5 }
Function:        project
Args:
  - String:          ''''
  - Callee:          set_bnd
    DebugLoc:        { File: solver.c, Line: 20, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          project
    DebugLoc:        { File: solver.c, Line: 96, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '230'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: solver.c, Line: 118, Column: 5 }
Function:        project
Args:
  - String:          ''''
  - Callee:          set_bnd
    DebugLoc:        { File: solver.c, Line: 20, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          project
    DebugLoc:        { File: solver.c, Line: 96, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '230'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: solver.c, Line: 47, Column: 9 }
Function:        project
Args:
  - String:          ''''
  - Callee:          set_bnd
    DebugLoc:        { File: solver.c, Line: 20, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          project
    DebugLoc:        { File: solver.c, Line: 96, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '220'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
  - String:          ' at callsite '
  - String:          lin_solve
  - String:          ':'
  - Line:            '13'
  - String:          ':'
  - Column:          '9'
  - String:          ' @ '
  - String:          project
  - String:          ':'
  - Line:            '13'
  - String:          ':'
  - Column:          '5'
  - String:          ';'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: solver.c, Line: 132, Column: 5 }
Function:        vel_step
Args:
  - String:          ''''
  - Callee:          add_source
    DebugLoc:        { File: solver.c, Line: 11, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          vel_step
    DebugLoc:        { File: solver.c, Line: 131, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '0'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
  - String:          ' at callsite '
  - String:          vel_step
  - String:          ':'
  - Line:            '2'
  - String:          ':'
  - Column:          '5'
  - String:          ';'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: solver.c, Line: 133, Column: 5 }
Function:        vel_step
Args:
  - String:          ''''
  - Callee:          add_source
  - String:          ''' inlined into '''
  - Caller:          vel_step
    DebugLoc:        { File: solver.c, Line: 131, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '-15000'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
  - String:          ' at callsite '
  - String:          vel_step
  - String:          ':'
  - Line:            '3'
  - String:          ':'
  - Column:          '5'
  - String:          ';'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: solver.c, Line: 135, Column: 5 }
Function:        vel_step
Args:
  - String:          ''''
  - Callee:          diffuse
    DebugLoc:        { File: solver.c, Line: 52, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          vel_step
    DebugLoc:        { File: solver.c, Line: 131, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '180'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
  - String:          ' at callsite '
  - String:          vel_step
  - String:          ':'
  - Line:            '5'
  - String:          ':'
  - Column:          '5'
  - String:          ';'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: solver.c, Line: 137, Column: 5 }
Function:        vel_step
Args:
  - String:          ''''
  - Callee:          diffuse
  - String:          ''' inlined into '''
  - Caller:          vel_step
    DebugLoc:        { File: solver.c, Line: 131, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '-14820'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
  - String:          ' at callsite '
  - String:          vel_step
  - String:          ':'
  - Line:            '7'
  - String:          ':'
  - Column:          '5'
  - String:          ';'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: solver.c, Line: 138, Column: 5 }
Function:        vel_step
Args:
  - String:          ''''
  - Callee:          project
    DebugLoc:        { File: solver.c, Line: 96, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          vel_step
    DebugLoc:        { File: solver.c, Line: 131, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '565'
  - String:          ', threshold='
  - Threshold:       '562'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: solver.c, Line: 141, Column: 5 }
Function:        vel_step
Args:
  - String:          ''''
  - Callee:          advect
    DebugLoc:        { File: solver.c, Line: 58, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          vel_step
    DebugLoc:        { File: solver.c, Line: 131, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '270'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: solver.c, Line: 142, Column: 5 }
Function:        vel_step
Args:
  - String:          ''''
  - Callee:          advect
    DebugLoc:        { File: solver.c, Line: 58, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          vel_step
    DebugLoc:        { File: solver.c, Line: 131, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '270'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: solver.c, Line: 143, Column: 5 }
Function:        vel_step
Args:
  - String:          ''''
  - Callee:          project
    DebugLoc:        { File: solver.c, Line: 96, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          vel_step
    DebugLoc:        { File: solver.c, Line: 131, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '565'
  - String:          ', threshold='
  - Threshold:       '562'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: solver.c, Line: 47, Column: 9 }
Function:        vel_step
Args:
  - String:          ''''
  - Callee:          set_bnd
    DebugLoc:        { File: solver.c, Line: 20, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          vel_step
    DebugLoc:        { File: solver.c, Line: 131, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '230'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: solver.c, Line: 47, Column: 9 }
Function:        vel_step
Args:
  - String:          ''''
  - Callee:          set_bnd
    DebugLoc:        { File: solver.c, Line: 20, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          vel_step
    DebugLoc:        { File: solver.c, Line: 131, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '230'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 23, Column: 29 }
Function:        set_bnd
Args:
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: solver.c, Line: 23, Column: 29 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 23, Column: 60 }
Function:        set_bnd
Args:
  - String:          'hoisting '
  - Inst:            add
    DebugLoc:        { File: solver.c, Line: 23, Column: 60 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 24, Column: 11 }
Function:        set_bnd
Args:
  - String:          'hoisting '
  - Inst:            add
    DebugLoc:        { File: solver.c, Line: 24, Column: 11 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 25, Column: 29 }
Function:        set_bnd
Args:
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: solver.c, Line: 25, Column: 29 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 26, Column: 48 }
Function:        set_bnd
Args:
  - String:          'hoisting '
  - Inst:            mul
    DebugLoc:        { File: solver.c, Line: 26, Column: 48 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 23, Column: 46 }
Function:        set_bnd
Args:
  - String:          'hoisting '
  - Inst:            add
    DebugLoc:        { File: solver.c, Line: 23, Column: 46 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 24, Column: 11 }
Function:        set_bnd
Args:
  - String:          'hoisting '
  - Inst:            add
    DebugLoc:        { File: solver.c, Line: 24, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 26, Column: 46 }
Function:        set_bnd
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 25, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 25, Column: 60 }
Function:        set_bnd
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 24, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        set_bnd
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        set_bnd
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 35 }
Function:        set_bnd
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 53 }
Function:        set_bnd
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
Function:        set_bnd
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 53 }
Function:        set_bnd
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 35 }
Function:        set_bnd
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 53 }
Function:        set_bnd
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 26, Column: 46 }
Function:        set_bnd
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 25, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 25, Column: 60 }
Function:        set_bnd
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 24, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        set_bnd
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        set_bnd
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 35 }
Function:        set_bnd
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 53 }
Function:        set_bnd
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
Function:        set_bnd
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 53 }
Function:        set_bnd
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 35 }
Function:        set_bnd
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 53 }
Function:        set_bnd
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 26, Column: 11 }
Function:        set_bnd
Args:
  - String:          'hoisting '
  - Inst:            mul
    DebugLoc:        { File: solver.c, Line: 26, Column: 11 }
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: solver.c, Line: 92, Column: 5 }
Function:        advect
Args:
  - String:          ''''
  - Callee:          set_bnd
    DebugLoc:        { File: solver.c, Line: 20, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          advect
    DebugLoc:        { File: solver.c, Line: 58, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '320'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 68, Column: 29 }
Function:        advect
Args:
  - String:          'hoisting '
  - Inst:            add
    DebugLoc:        { File: solver.c, Line: 68, Column: 29 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 68, Column: 29 }
Function:        advect
Args:
  - String:          'hoisting '
  - Inst:            mul
    DebugLoc:        { File: solver.c, Line: 68, Column: 29 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 69, Column: 17 }
Function:        advect
Args:
  - String:          'hoisting '
  - Inst:            uitofp
    DebugLoc:        { File: solver.c, Line: 69, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 70, Column: 17 }
Function:        advect
Args:
  - String:          'hoisting '
  - Inst:            fadd
    DebugLoc:        { File: solver.c, Line: 70, Column: 17 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 67, Column: 32 }
Function:        advect
Args:
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: solver.c, Line: 67, Column: 32 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 68, Column: 29 }
Function:        advect
Args:
  - String:          'hoisting '
  - Inst:            add
    DebugLoc:        { File: solver.c, Line: 68, Column: 29 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 70, Column: 17 }
Function:        advect
Args:
  - String:          'hoisting '
  - Inst:            fadd
    DebugLoc:        { File: solver.c, Line: 70, Column: 17 }
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: solver.c, Line: 127, Column: 5 }
Function:        dens_step
Args:
  - String:          ''''
  - Callee:          advect
    DebugLoc:        { File: solver.c, Line: 58, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          dens_step
    DebugLoc:        { File: solver.c, Line: 122, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '275'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        dens_step
Args:
  - String:          'hoisting '
  - Inst:            fdiv
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        dens_step
Args:
  - String:          'hoisting '
  - Inst:            fdiv
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        dens_step
Args:
  - String:          'hoisting '
  - Inst:            fmul
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 40, Column: 40 }
Function:        dens_step
Args:
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: solver.c, Line: 40, Column: 40 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 24, Column: 11 }
Function:        dens_step
Args:
  - String:          'hoisting '
  - Inst:            add
    DebugLoc:        { File: solver.c, Line: 24, Column: 11 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 26, Column: 62 }
Function:        dens_step
Args:
  - String:          'hoisting '
  - Inst:            mul
    DebugLoc:        { File: solver.c, Line: 26, Column: 62 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 26, Column: 11 }
Function:        dens_step
Args:
  - String:          'hoisting '
  - Inst:            mul
    DebugLoc:        { File: solver.c, Line: 26, Column: 11 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        dens_step
Args:
  - String:          'hoisting '
  - Inst:            fdiv
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 39, Column: 29 }
Function:        dens_step
Args:
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: solver.c, Line: 39, Column: 29 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 22, Column: 32 }
Function:        dens_step
Args:
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: solver.c, Line: 22, Column: 32 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        dens_step
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        dens_step
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        dens_step
Args:
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        dens_step
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        dens_step
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 29, Column: 37 }
Function:        dens_step
Args:
  - String:          'hoisting '
  - Inst:            add
    DebugLoc:        { File: solver.c, Line: 29, Column: 37 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 29, Column: 37 }
Function:        dens_step
Args:
  - String:          'hoisting '
  - Inst:            mul
    DebugLoc:        { File: solver.c, Line: 29, Column: 37 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 29, Column: 37 }
Function:        dens_step
Args:
  - String:          'hoisting '
  - Inst:            add
    DebugLoc:        { File: solver.c, Line: 29, Column: 37 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 29, Column: 35 }
Function:        dens_step
Args:
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: solver.c, Line: 29, Column: 35 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 29, Column: 35 }
Function:        dens_step
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: solver.c, Line: 29, Column: 35 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 29, Column: 35 }
Function:        dens_step
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 29, Column: 55 }
Function:        dens_step
Args:
  - String:          'hoisting '
  - Inst:            mul
    DebugLoc:        { File: solver.c, Line: 29, Column: 55 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 29, Column: 53 }
Function:        dens_step
Args:
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: solver.c, Line: 29, Column: 53 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 29, Column: 53 }
Function:        dens_step
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: solver.c, Line: 29, Column: 53 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 29, Column: 53 }
Function:        dens_step
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 29, Column: 5 }
Function:        dens_step
Args:
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: solver.c, Line: 29, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 29, Column: 5 }
Function:        dens_step
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: solver.c, Line: 29, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
Function:        dens_step
Args:
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
Function:        dens_step
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
Function:        dens_step
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 30, Column: 55 }
Function:        dens_step
Args:
  - String:          'hoisting '
  - Inst:            add
    DebugLoc:        { File: solver.c, Line: 30, Column: 55 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 30, Column: 53 }
Function:        dens_step
Args:
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: solver.c, Line: 30, Column: 53 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 30, Column: 53 }
Function:        dens_step
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: solver.c, Line: 30, Column: 53 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 30, Column: 53 }
Function:        dens_step
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 30, Column: 5 }
Function:        dens_step
Args:
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: solver.c, Line: 30, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 30, Column: 5 }
Function:        dens_step
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: solver.c, Line: 30, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 31, Column: 37 }
Function:        dens_step
Args:
  - String:          'hoisting '
  - Inst:            add
    DebugLoc:        { File: solver.c, Line: 31, Column: 37 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 31, Column: 35 }
Function:        dens_step
Args:
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: solver.c, Line: 31, Column: 35 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 31, Column: 35 }
Function:        dens_step
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: solver.c, Line: 31, Column: 35 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 31, Column: 35 }
Function:        dens_step
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 31, Column: 55 }
Function:        dens_step
Args:
  - String:          'hoisting '
  - Inst:            add
    DebugLoc:        { File: solver.c, Line: 31, Column: 55 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 31, Column: 53 }
Function:        dens_step
Args:
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: solver.c, Line: 31, Column: 53 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 31, Column: 53 }
Function:        dens_step
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: solver.c, Line: 31, Column: 53 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 31, Column: 53 }
Function:        dens_step
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 31, Column: 7 }
Function:        dens_step
Args:
  - String:          'hoisting '
  - Inst:            add
    DebugLoc:        { File: solver.c, Line: 31, Column: 7 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 31, Column: 5 }
Function:        dens_step
Args:
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: solver.c, Line: 31, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 31, Column: 5 }
Function:        dens_step
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: solver.c, Line: 31, Column: 5 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 40, Column: 40 }
Function:        dens_step
Args:
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: solver.c, Line: 40, Column: 40 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 24, Column: 11 }
Function:        dens_step
Args:
  - String:          'hoisting '
  - Inst:            add
    DebugLoc:        { File: solver.c, Line: 24, Column: 11 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 26, Column: 62 }
Function:        dens_step
Args:
  - String:          'hoisting '
  - Inst:            mul
    DebugLoc:        { File: solver.c, Line: 26, Column: 62 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 26, Column: 11 }
Function:        dens_step
Args:
  - String:          'hoisting '
  - Inst:            mul
    DebugLoc:        { File: solver.c, Line: 26, Column: 11 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        dens_step
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        dens_step
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 29, Column: 35 }
Function:        dens_step
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 29, Column: 53 }
Function:        dens_step
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
Function:        dens_step
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 30, Column: 53 }
Function:        dens_step
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 31, Column: 35 }
Function:        dens_step
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 31, Column: 53 }
Function:        dens_step
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 25, Column: 60 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 24, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 26, Column: 60 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 25, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 31, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 41, Column: 29 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 31, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 41, Column: 29 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 35 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 53 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 53 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 35 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 53 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 25, Column: 60 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 24, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 26, Column: 60 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 25, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 31, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 41, Column: 29 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 31, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 41, Column: 29 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 35 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 53 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 53 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 35 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 53 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        dens_step
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        dens_step
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 29, Column: 35 }
Function:        dens_step
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 29, Column: 53 }
Function:        dens_step
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
Function:        dens_step
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 30, Column: 53 }
Function:        dens_step
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 31, Column: 35 }
Function:        dens_step
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 31, Column: 53 }
Function:        dens_step
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: solver.c, Line: 117, Column: 5 }
Function:        project
Args:
  - String:          ''''
  - Callee:          set_bnd
    DebugLoc:        { File: solver.c, Line: 20, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          project
    DebugLoc:        { File: solver.c, Line: 96, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '210'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
  - String:          ' at callsite '
  - String:          project
  - String:          ':'
  - Line:            '22'
  - String:          ':'
  - Column:          '5'
  - String:          ';'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: solver.c, Line: 118, Column: 5 }
Function:        project
Args:
  - String:          ''''
  - Callee:          set_bnd
    DebugLoc:        { File: solver.c, Line: 20, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          project
    DebugLoc:        { File: solver.c, Line: 96, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '210'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
  - String:          ' at callsite '
  - String:          project
  - String:          ':'
  - Line:            '23'
  - String:          ':'
  - Column:          '5'
  - String:          ';'
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 100, Column: 40 }
Function:        project
Args:
  - String:          'hoisting '
  - Inst:            add
    DebugLoc:        { File: solver.c, Line: 100, Column: 40 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 100, Column: 40 }
Function:        project
Args:
  - String:          'hoisting '
  - Inst:            mul
    DebugLoc:        { File: solver.c, Line: 100, Column: 40 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 101, Column: 40 }
Function:        project
Args:
  - String:          'hoisting '
  - Inst:            add
    DebugLoc:        { File: solver.c, Line: 101, Column: 40 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 101, Column: 40 }
Function:        project
Args:
  - String:          'hoisting '
  - Inst:            mul
    DebugLoc:        { File: solver.c, Line: 101, Column: 40 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 101, Column: 58 }
Function:        project
Args:
  - String:          'hoisting '
  - Inst:            add
    DebugLoc:        { File: solver.c, Line: 101, Column: 58 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 101, Column: 58 }
Function:        project
Args:
  - String:          'hoisting '
  - Inst:            mul
    DebugLoc:        { File: solver.c, Line: 101, Column: 58 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 101, Column: 75 }
Function:        project
Args:
  - String:          'hoisting '
  - Inst:            uitofp
    DebugLoc:        { File: solver.c, Line: 101, Column: 75 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        project
Args:
  - String:          'hoisting '
  - Inst:            fdiv
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 99, Column: 32 }
Function:        project
Args:
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: solver.c, Line: 99, Column: 32 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 100, Column: 40 }
Function:        project
Args:
  - String:          'hoisting '
  - Inst:            add
    DebugLoc:        { File: solver.c, Line: 100, Column: 40 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 101, Column: 75 }
Function:        project
Args:
  - String:          'hoisting '
  - Inst:            uitofp
    DebugLoc:        { File: solver.c, Line: 101, Column: 75 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        project
Args:
  - String:          'hoisting '
  - Inst:            fdiv
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 23, Column: 60 }
Function:        project
Args:
  - String:          'hoisting '
  - Inst:            add
    DebugLoc:        { File: solver.c, Line: 23, Column: 60 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 24, Column: 11 }
Function:        project
Args:
  - String:          'hoisting '
  - Inst:            add
    DebugLoc:        { File: solver.c, Line: 24, Column: 11 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 26, Column: 62 }
Function:        project
Args:
  - String:          'hoisting '
  - Inst:            mul
    DebugLoc:        { File: solver.c, Line: 26, Column: 62 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 26, Column: 11 }
Function:        project
Args:
  - String:          'hoisting '
  - Inst:            mul
    DebugLoc:        { File: solver.c, Line: 26, Column: 11 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 40, Column: 40 }
Function:        project
Args:
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: solver.c, Line: 40, Column: 40 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 39, Column: 29 }
Function:        project
Args:
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: solver.c, Line: 39, Column: 29 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 22, Column: 32 }
Function:        project
Args:
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: solver.c, Line: 22, Column: 32 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        project
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        project
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 29, Column: 35 }
Function:        project
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 29, Column: 53 }
Function:        project
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
Function:        project
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 30, Column: 53 }
Function:        project
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 31, Column: 35 }
Function:        project
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 31, Column: 53 }
Function:        project
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 40, Column: 40 }
Function:        project
Args:
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: solver.c, Line: 40, Column: 40 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        project
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        project
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 29, Column: 35 }
Function:        project
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 29, Column: 53 }
Function:        project
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
Function:        project
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 30, Column: 53 }
Function:        project
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 31, Column: 35 }
Function:        project
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 31, Column: 53 }
Function:        project
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 113, Column: 35 }
Function:        project
Args:
  - String:          'hoisting '
  - Inst:            uitofp
    DebugLoc:        { File: solver.c, Line: 113, Column: 35 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 113, Column: 33 }
Function:        project
Args:
  - String:          'hoisting '
  - Inst:            fmul
    DebugLoc:        { File: solver.c, Line: 113, Column: 33 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 113, Column: 42 }
Function:        project
Args:
  - String:          'hoisting '
  - Inst:            mul
    DebugLoc:        { File: solver.c, Line: 113, Column: 42 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 114, Column: 42 }
Function:        project
Args:
  - String:          'hoisting '
  - Inst:            add
    DebugLoc:        { File: solver.c, Line: 114, Column: 42 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 114, Column: 42 }
Function:        project
Args:
  - String:          'hoisting '
  - Inst:            mul
    DebugLoc:        { File: solver.c, Line: 114, Column: 42 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 114, Column: 60 }
Function:        project
Args:
  - String:          'hoisting '
  - Inst:            add
    DebugLoc:        { File: solver.c, Line: 114, Column: 60 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 114, Column: 60 }
Function:        project
Args:
  - String:          'hoisting '
  - Inst:            mul
    DebugLoc:        { File: solver.c, Line: 114, Column: 60 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 112, Column: 32 }
Function:        project
Args:
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: solver.c, Line: 112, Column: 32 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 113, Column: 35 }
Function:        project
Args:
  - String:          'hoisting '
  - Inst:            uitofp
    DebugLoc:        { File: solver.c, Line: 113, Column: 35 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 113, Column: 33 }
Function:        project
Args:
  - String:          'hoisting '
  - Inst:            fmul
    DebugLoc:        { File: solver.c, Line: 113, Column: 33 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 25, Column: 60 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 24, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 26, Column: 60 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 25, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 102, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 102, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 25, Column: 60 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 24, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 26, Column: 60 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 25, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 31, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 31, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 25, Column: 60 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 24, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 26, Column: 60 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 25, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 31, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 31, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 41, Column: 29 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 31, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 31, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 41, Column: 29 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: solver.c, Line: 29, Column: 35 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: solver.c, Line: 29, Column: 53 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: solver.c, Line: 30, Column: 53 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: solver.c, Line: 31, Column: 35 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: solver.c, Line: 31, Column: 53 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 114, Column: 40 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 113, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 114, Column: 58 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 113, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 114, Column: 25 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: solver.c, Line: 114, Column: 25 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 113, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 25, Column: 60 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 24, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 26, Column: 60 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 25, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 31, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 114, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 31, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 114, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 25, Column: 46 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 24, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 26, Column: 46 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 25, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 31, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 31, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 25, Column: 60 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 24, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 26, Column: 60 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 25, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 102, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 102, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 25, Column: 60 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 24, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 26, Column: 60 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 25, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 31, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 31, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: solver.c, Line: 29, Column: 35 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: solver.c, Line: 29, Column: 53 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: solver.c, Line: 30, Column: 53 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: solver.c, Line: 31, Column: 35 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: solver.c, Line: 31, Column: 53 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 25, Column: 60 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 24, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 26, Column: 60 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 25, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 31, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 31, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 41, Column: 29 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 31, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 31, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 41, Column: 29 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: solver.c, Line: 29, Column: 35 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: solver.c, Line: 29, Column: 53 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: solver.c, Line: 30, Column: 53 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: solver.c, Line: 31, Column: 35 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: solver.c, Line: 31, Column: 53 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 114, Column: 40 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 113, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 114, Column: 58 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 113, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 114, Column: 25 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: solver.c, Line: 114, Column: 25 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 113, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 25, Column: 60 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 24, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 26, Column: 60 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 25, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 31, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 114, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 31, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 114, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 25, Column: 46 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 24, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 26, Column: 46 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 25, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 31, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 31, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        project
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        project
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 29, Column: 35 }
Function:        project
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 29, Column: 53 }
Function:        project
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
Function:        project
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 30, Column: 53 }
Function:        project
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 31, Column: 35 }
Function:        project
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 31, Column: 53 }
Function:        project
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: solver.c, Line: 47, Column: 9 }
Function:        vel_step
Args:
  - String:          ''''
  - Callee:          set_bnd
    DebugLoc:        { File: solver.c, Line: 20, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          vel_step
    DebugLoc:        { File: solver.c, Line: 131, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '210'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
  - String:          ' at callsite '
  - String:          lin_solve
  - String:          ':'
  - Line:            '13'
  - String:          ':'
  - Column:          '9'
  - String:          ' @ '
  - String:          diffuse
  - String:          ':'
  - Line:            '3'
  - String:          ':'
  - Column:          '5'
  - String:          ' @ '
  - String:          vel_step
  - String:          ':'
  - Line:            '5'
  - String:          ':'
  - Column:          '5'
  - String:          ';'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: solver.c, Line: 47, Column: 9 }
Function:        vel_step
Args:
  - String:          ''''
  - Callee:          set_bnd
    DebugLoc:        { File: solver.c, Line: 20, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          vel_step
    DebugLoc:        { File: solver.c, Line: 131, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '210'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
  - String:          ' at callsite '
  - String:          lin_solve
  - String:          ':'
  - Line:            '13'
  - String:          ':'
  - Column:          '9'
  - String:          ' @ '
  - String:          diffuse
  - String:          ':'
  - Line:            '3'
  - String:          ':'
  - Column:          '5'
  - String:          ' @ '
  - String:          vel_step
  - String:          ':'
  - Line:            '7'
  - String:          ':'
  - Column:          '5'
  - String:          ';'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: solver.c, Line: 138, Column: 5 }
Function:        vel_step
Args:
  - String:          ''''
  - Callee:          project
    DebugLoc:        { File: solver.c, Line: 96, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          vel_step
    DebugLoc:        { File: solver.c, Line: 131, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '565'
  - String:          ', threshold='
  - Threshold:       '562'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: solver.c, Line: 141, Column: 5 }
Function:        vel_step
Args:
  - String:          ''''
  - Callee:          advect
    DebugLoc:        { File: solver.c, Line: 58, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          vel_step
    DebugLoc:        { File: solver.c, Line: 131, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '275'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: solver.c, Line: 142, Column: 5 }
Function:        vel_step
Args:
  - String:          ''''
  - Callee:          advect
    DebugLoc:        { File: solver.c, Line: 58, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          vel_step
    DebugLoc:        { File: solver.c, Line: 131, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '275'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: solver.c, Line: 143, Column: 5 }
Function:        vel_step
Args:
  - String:          ''''
  - Callee:          project
    DebugLoc:        { File: solver.c, Line: 96, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          vel_step
    DebugLoc:        { File: solver.c, Line: 131, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '565'
  - String:          ', threshold='
  - Threshold:       '562'
  - String:          ')'
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        vel_step
Args:
  - String:          'hoisting '
  - Inst:            fdiv
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        vel_step
Args:
  - String:          'hoisting '
  - Inst:            fdiv
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        vel_step
Args:
  - String:          'hoisting '
  - Inst:            fmul
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 40, Column: 40 }
Function:        vel_step
Args:
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: solver.c, Line: 40, Column: 40 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        vel_step
Args:
  - String:          'hoisting '
  - Inst:            fdiv
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 39, Column: 29 }
Function:        vel_step
Args:
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: solver.c, Line: 39, Column: 29 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 22, Column: 32 }
Function:        vel_step
Args:
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: solver.c, Line: 22, Column: 32 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        vel_step
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        vel_step
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        vel_step
Args:
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        vel_step
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        vel_step
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
Function:        vel_step
Args:
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
Function:        vel_step
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
Function:        vel_step
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 40, Column: 40 }
Function:        vel_step
Args:
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: solver.c, Line: 40, Column: 40 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 24, Column: 11 }
Function:        vel_step
Args:
  - String:          'hoisting '
  - Inst:            add
    DebugLoc:        { File: solver.c, Line: 24, Column: 11 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 26, Column: 48 }
Function:        vel_step
Args:
  - String:          'hoisting '
  - Inst:            mul
    DebugLoc:        { File: solver.c, Line: 26, Column: 48 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 26, Column: 11 }
Function:        vel_step
Args:
  - String:          'hoisting '
  - Inst:            mul
    DebugLoc:        { File: solver.c, Line: 26, Column: 11 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        vel_step
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        vel_step
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
Function:        vel_step
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        vel_step
Args:
  - String:          'hoisting '
  - Inst:            fdiv
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        vel_step
Args:
  - String:          'hoisting '
  - Inst:            fdiv
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        vel_step
Args:
  - String:          'hoisting '
  - Inst:            fmul
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 40, Column: 40 }
Function:        vel_step
Args:
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: solver.c, Line: 40, Column: 40 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        vel_step
Args:
  - String:          'hoisting '
  - Inst:            fdiv
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 39, Column: 29 }
Function:        vel_step
Args:
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: solver.c, Line: 39, Column: 29 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 22, Column: 32 }
Function:        vel_step
Args:
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: solver.c, Line: 22, Column: 32 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        vel_step
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        vel_step
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        vel_step
Args:
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        vel_step
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        vel_step
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
Function:        vel_step
Args:
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
Function:        vel_step
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
Function:        vel_step
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 40, Column: 40 }
Function:        vel_step
Args:
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: solver.c, Line: 40, Column: 40 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 24, Column: 11 }
Function:        vel_step
Args:
  - String:          'hoisting '
  - Inst:            add
    DebugLoc:        { File: solver.c, Line: 24, Column: 11 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 26, Column: 48 }
Function:        vel_step
Args:
  - String:          'hoisting '
  - Inst:            mul
    DebugLoc:        { File: solver.c, Line: 26, Column: 48 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 26, Column: 11 }
Function:        vel_step
Args:
  - String:          'hoisting '
  - Inst:            mul
    DebugLoc:        { File: solver.c, Line: 26, Column: 11 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        vel_step
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        vel_step
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
Function:        vel_step
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 15, Column: 22 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 25, Column: 60 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 24, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 26, Column: 60 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 25, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 31, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 41, Column: 29 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 31, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 41, Column: 29 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 35 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 53 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 53 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 35 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 53 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 25, Column: 46 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 24, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 26, Column: 46 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 25, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 31, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 31, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 41, Column: 29 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 31, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 31, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 41, Column: 29 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 35 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 53 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 53 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 35 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 53 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 15, Column: 22 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 25, Column: 60 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 24, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 26, Column: 60 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 25, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 31, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 41, Column: 29 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 31, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 41, Column: 29 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 35 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 53 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 53 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 35 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 53 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 25, Column: 46 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 24, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 26, Column: 46 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 25, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 31, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 31, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 41, Column: 29 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 31, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 31, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 41, Column: 29 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 35 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 53 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 53 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 35 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 53 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 31, Column: 37 }
Function:        vel_step
Args:
  - String:          'hoisting '
  - Inst:            add
    DebugLoc:        { File: solver.c, Line: 31, Column: 37 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 31, Column: 35 }
Function:        vel_step
Args:
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: solver.c, Line: 31, Column: 35 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        vel_step
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        vel_step
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
Function:        vel_step
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 31, Column: 37 }
Function:        vel_step
Args:
  - String:          'hoisting '
  - Inst:            add
    DebugLoc:        { File: solver.c, Line: 31, Column: 37 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 31, Column: 35 }
Function:        vel_step
Args:
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: solver.c, Line: 31, Column: 35 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        vel_step
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        vel_step
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
Function:        vel_step
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 25, Column: 60 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 24, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 26, Column: 60 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 25, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 31, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 31, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 35 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 53 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 53 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 35 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 53 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 25, Column: 60 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 24, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 26, Column: 60 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 25, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 31, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 31, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 35 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 53 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 53 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 35 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 53 }
Function:        dens_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 26, Column: 46 }
Function:        set_bnd
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 25, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 25, Column: 60 }
Function:        set_bnd
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 24, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        set_bnd
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 35 }
Function:        set_bnd
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 53 }
Function:        set_bnd
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
Function:        set_bnd
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 53 }
Function:        set_bnd
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 35 }
Function:        set_bnd
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 53 }
Function:        set_bnd
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 15, Column: 22 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 15, Column: 22 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 15, Column: 22 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 25, Column: 60 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 24, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 26, Column: 60 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 25, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 31, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 31, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 35 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 53 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 53 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 35 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 53 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 25, Column: 46 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 24, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 26, Column: 46 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 25, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 31, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 31, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 31, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 31, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 35 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 53 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 53 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 35 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 53 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 15, Column: 22 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 15, Column: 22 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 15, Column: 22 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 25, Column: 60 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 24, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 26, Column: 60 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 25, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 31, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 31, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 15, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 35 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 53 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 53 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 35 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 53 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 25, Column: 46 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 24, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 26, Column: 46 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 25, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 31, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 31, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 31, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 31, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 35 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 53 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 53 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 35 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 53 }
Function:        vel_step
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 25, Column: 60 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 24, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 26, Column: 60 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 25, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 25, Column: 60 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 24, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 26, Column: 60 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 25, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 31, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 31, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 25, Column: 60 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 24, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 26, Column: 60 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 25, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 31, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 31, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 31, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 31, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: solver.c, Line: 29, Column: 35 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: solver.c, Line: 29, Column: 53 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: solver.c, Line: 30, Column: 53 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: solver.c, Line: 31, Column: 35 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: solver.c, Line: 31, Column: 53 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 114, Column: 40 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 113, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 114, Column: 58 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 113, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 114, Column: 25 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: solver.c, Line: 114, Column: 25 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 113, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 25, Column: 60 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 24, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 26, Column: 60 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 25, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 31, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 31, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 25, Column: 46 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 24, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 26, Column: 46 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 25, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 31, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 26, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 31, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 29, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 28, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 30, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 29, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 35 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: solver.c, Line: 31, Column: 53 }
Function:        project
Args:
  - String:          'load of type '
  - Type:            ''
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: solver.c, Line: 30, Column: 25 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 23, Column: 58 }
Function:        dens_step
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 24, Column: 58 }
Function:        dens_step
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 25, Column: 60 }
Function:        dens_step
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 26, Column: 60 }
Function:        dens_step
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 41, Column: 52 }
Function:        dens_step
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 43, Column: 52 }
Function:        dens_step
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        dens_step
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 29, Column: 53 }
Function:        dens_step
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
Function:        dens_step
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 30, Column: 5 }
Function:        dens_step
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 31, Column: 53 }
Function:        dens_step
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 14, Column: 5 }
Function:        dens_step
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 14, Column: 5 }
Function:        dens_step
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 12, Column: 28 }
Function:        dens_step
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 12, Column: 28 }
Function:        dens_step
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 15, Column: 20 }
Function:        dens_step
Args:
  - String:          'hoisting '
  - Inst:            insertelement
    DebugLoc:        { File: solver.c, Line: 15, Column: 20 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 15, Column: 20 }
Function:        dens_step
Args:
  - String:          'hoisting '
  - Inst:            shufflevector
    DebugLoc:        { File: solver.c, Line: 15, Column: 20 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        dens_step
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        dens_step
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 29, Column: 35 }
Function:        dens_step
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 29, Column: 53 }
Function:        dens_step
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
Function:        dens_step
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 30, Column: 53 }
Function:        dens_step
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 31, Column: 35 }
Function:        dens_step
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 31, Column: 53 }
Function:        dens_step
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 77, Column: 19 }
Function:        advect
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 77, Column: 17 }
Function:        advect
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 77, Column: 19 }
Function:        advect
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 77, Column: 17 }
Function:        advect
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 88, Column: 38 }
Function:        advect
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 29, Column: 55 }
Function:        set_bnd
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        set_bnd
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 29, Column: 53 }
Function:        set_bnd
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
Function:        set_bnd
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 30, Column: 5 }
Function:        set_bnd
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 31, Column: 53 }
Function:        set_bnd
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 25, Column: 9 }
Function:        set_bnd
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 23, Column: 9 }
Function:        set_bnd
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 24, Column: 9 }
Function:        set_bnd
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 25, Column: 9 }
Function:        set_bnd
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 23, Column: 9 }
Function:        set_bnd
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 24, Column: 9 }
Function:        set_bnd
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 25, Column: 29 }
Function:        set_bnd
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 25, Column: 29 }
Function:        set_bnd
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 25, Column: 29 }
Function:        set_bnd
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 29, Column: 55 }
Function:        vel_step
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 29, Column: 55 }
Function:        vel_step
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 29, Column: 55 }
Function:        vel_step
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 29, Column: 35 }
Function:        vel_step
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 29, Column: 5 }
Function:        vel_step
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 31, Column: 53 }
Function:        vel_step
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 23, Column: 58 }
Function:        vel_step
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 24, Column: 58 }
Function:        vel_step
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 25, Column: 46 }
Function:        vel_step
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 26, Column: 46 }
Function:        vel_step
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 41, Column: 52 }
Function:        vel_step
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 43, Column: 52 }
Function:        vel_step
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        vel_step
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 29, Column: 55 }
Function:        vel_step
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 29, Column: 55 }
Function:        vel_step
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 29, Column: 55 }
Function:        vel_step
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 29, Column: 35 }
Function:        vel_step
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 29, Column: 5 }
Function:        vel_step
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 31, Column: 53 }
Function:        vel_step
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 23, Column: 44 }
Function:        vel_step
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 24, Column: 44 }
Function:        vel_step
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 25, Column: 60 }
Function:        vel_step
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 26, Column: 60 }
Function:        vel_step
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 41, Column: 52 }
Function:        vel_step
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 43, Column: 52 }
Function:        vel_step
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        vel_step
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 14, Column: 5 }
Function:        vel_step
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 14, Column: 5 }
Function:        vel_step
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 14, Column: 5 }
Function:        vel_step
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 14, Column: 5 }
Function:        vel_step
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 12, Column: 28 }
Function:        vel_step
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 12, Column: 28 }
Function:        vel_step
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 15, Column: 20 }
Function:        vel_step
Args:
  - String:          'hoisting '
  - Inst:            insertelement
    DebugLoc:        { File: solver.c, Line: 15, Column: 20 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 15, Column: 20 }
Function:        vel_step
Args:
  - String:          'hoisting '
  - Inst:            shufflevector
    DebugLoc:        { File: solver.c, Line: 15, Column: 20 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 15, Column: 20 }
Function:        vel_step
Args:
  - String:          'hoisting '
  - Inst:            insertelement
    DebugLoc:        { File: solver.c, Line: 15, Column: 20 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: solver.c, Line: 15, Column: 20 }
Function:        vel_step
Args:
  - String:          'hoisting '
  - Inst:            shufflevector
    DebugLoc:        { File: solver.c, Line: 15, Column: 20 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        vel_step
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        vel_step
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
Function:        vel_step
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        vel_step
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        vel_step
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
Function:        vel_step
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 29, Column: 55 }
Function:        project
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        project
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 29, Column: 53 }
Function:        project
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
Function:        project
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 31, Column: 53 }
Function:        project
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 23, Column: 58 }
Function:        project
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 24, Column: 58 }
Function:        project
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 25, Column: 46 }
Function:        project
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 26, Column: 46 }
Function:        project
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 29, Column: 55 }
Function:        project
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        project
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 29, Column: 53 }
Function:        project
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
Function:        project
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 31, Column: 53 }
Function:        project
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 23, Column: 44 }
Function:        project
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 24, Column: 44 }
Function:        project
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 25, Column: 60 }
Function:        project
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 26, Column: 60 }
Function:        project
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 113, Column: 40 }
Function:        project
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 114, Column: 40 }
Function:        project
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 23, Column: 58 }
Function:        project
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 24, Column: 58 }
Function:        project
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 25, Column: 60 }
Function:        project
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 26, Column: 60 }
Function:        project
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 41, Column: 52 }
Function:        project
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 43, Column: 52 }
Function:        project
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        project
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 29, Column: 53 }
Function:        project
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
Function:        project
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 30, Column: 5 }
Function:        project
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 31, Column: 53 }
Function:        project
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 23, Column: 58 }
Function:        project
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 24, Column: 58 }
Function:        project
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 25, Column: 60 }
Function:        project
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 26, Column: 60 }
Function:        project
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 29, Column: 55 }
Function:        project
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 28, Column: 37 }
Function:        project
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 29, Column: 55 }
Function:        project
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        project
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 29, Column: 53 }
Function:        project
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
Function:        project
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 30, Column: 5 }
Function:        project
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 31, Column: 53 }
Function:        project
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 23, Column: 58 }
Function:        project
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 24, Column: 58 }
Function:        project
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: solver.c, Line: 25, Column: 60 }
Function:        project
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 26, Column: 60 }
Function:        project
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 100, Column: 38 }
Function:        project
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: solver.c, Line: 101, Column: 38 }
Function:        project
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 28, Column: 35 }
Function:        project
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        project
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 29, Column: 35 }
Function:        project
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 29, Column: 53 }
Function:        project
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 30, Column: 35 }
Function:        project
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 30, Column: 53 }
Function:        project
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 31, Column: 35 }
Function:        project
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: solver.c, Line: 31, Column: 53 }
Function:        project
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            regalloc
Name:            LoopSpillReloadCopies
DebugLoc:        { File: solver.c, Line: 39, Column: 2 }
Function:        dens_step
Args:
  - NumVRCopies:     '1'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '6.425000e+02'
  - String:          ' total copies cost '
  - String:          generated in loop
...
--- !Missed
Pass:            regalloc
Name:            LoopSpillReloadCopies
DebugLoc:        { File: solver.c, Line: 38, Column: 5 }
Function:        dens_step
Args:
  - NumReloads:      '9'
  - String:          ' reloads '
  - TotalReloadsCost: '2.770147e+02'
  - String:          ' total reloads cost '
  - NumVRCopies:     '3'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '6.826470e+02'
  - String:          ' total copies cost '
  - String:          generated in loop
...
--- !Missed
Pass:            regalloc
Name:            SpillReloadCopies
DebugLoc:        { File: solver.c, Line: 121, Column: 1 }
Function:        dens_step
Args:
  - NumSpills:       '11'
  - String:          ' spills '
  - TotalSpillsCost: '1.100000e+01'
  - String:          ' total spills cost '
  - NumReloads:      '11'
  - String:          ' reloads '
  - TotalReloadsCost: '2.790147e+02'
  - String:          ' total reloads cost '
  - NumVRCopies:     '9'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '6.878382e+02'
  - String:          ' total copies cost '
  - String:          generated in function
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: solver.c, Line: 122, Column: 0 }
Function:        dens_step
Args:
  - NumStackBytes:   '48'
  - String:          ' stack bytes in function'
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        dens_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '15'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 14, Column: 32 }
Function:        dens_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '5'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 15, Column: 9 }
Function:        dens_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        dens_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '1'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        dens_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '8'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        dens_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 15, Column: 20 }
Function:        dens_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 15, Column: 22 }
Function:        dens_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '8'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 14, Column: 5 }
Function:        dens_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        dens_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '1'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        dens_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '7'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 53, Column: 27 }
Function:        dens_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '41'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        dens_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '27'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 39, Column: 29 }
Function:        dens_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '2'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        dens_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '2'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        dens_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '2'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 41, Column: 52 }
Function:        dens_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '19'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 39, Column: 36 }
Function:        dens_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        dens_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 23, Column: 58 }
Function:        dens_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '22'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 127, Column: 5 }
Function:        dens_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '11'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: solver.c, Line: 122, Column: 0 }
Function:        dens_step
Args:
  - NumInstructions: '191'
  - String:          ' instructions in function'
...
--- !Missed
Pass:            regalloc
Name:            LoopSpillReloadCopies
DebugLoc:        { File: solver.c, Line: 67, Column: 5 }
Function:        advect
Args:
  - NumVRCopies:     '7'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '4.778083e+03'
  - String:          ' total copies cost '
  - String:          generated in loop
...
--- !Missed
Pass:            regalloc
Name:            LoopSpillReloadCopies
DebugLoc:        { File: solver.c, Line: 65, Column: 5 }
Function:        advect
Args:
  - NumVRCopies:     '7'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '4.778083e+03'
  - String:          ' total copies cost '
  - String:          generated in loop
...
--- !Missed
Pass:            regalloc
Name:            SpillReloadCopies
DebugLoc:        { File: solver.c, Line: 57, Column: 1 }
Function:        advect
Args:
  - NumVRCopies:     '7'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '4.778083e+03'
  - String:          ' total copies cost '
  - String:          generated in function
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: solver.c, Line: 58, Column: 0 }
Function:        advect
Args:
  - NumStackBytes:   '48'
  - String:          ' stack bytes in function'
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        advect
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '8'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 62, Column: 22 }
Function:        advect
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '9'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 69, Column: 17 }
Function:        advect
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 68, Column: 17 }
Function:        advect
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '60'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 65, Column: 39 }
Function:        advect
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 92, Column: 5 }
Function:        advect
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '7'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: solver.c, Line: 58, Column: 0 }
Function:        advect
Args:
  - NumInstructions: '91'
  - String:          ' instructions in function'
...
--- !Missed
Pass:            regalloc
Name:            SpillReloadCopies
DebugLoc:        { File: solver.c, Line: 19, Column: 1 }
Function:        set_bnd
Args:
  - NumVRCopies:     '2'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '1.238095e+00'
  - String:          ' total copies cost '
  - String:          generated in function
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: solver.c, Line: 20, Column: 0 }
Function:        set_bnd
Args:
  - NumStackBytes:   '48'
  - String:          ' stack bytes in function'
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        set_bnd
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '8'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 23, Column: 60 }
Function:        set_bnd
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '12'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 23, Column: 43 }
Function:        set_bnd
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '11'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 25, Column: 9 }
Function:        set_bnd
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 26, Column: 11 }
Function:        set_bnd
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '7'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 0, Column: 0 }
Function:        set_bnd
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '5'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 24, Column: 58 }
Function:        set_bnd
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '11'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 25, Column: 45 }
Function:        set_bnd
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '7'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        set_bnd
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 28, Column: 53 }
Function:        set_bnd
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '34'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: solver.c, Line: 20, Column: 0 }
Function:        set_bnd
Args:
  - NumInstructions: '103'
  - String:          ' instructions in function'
...
--- !Missed
Pass:            regalloc
Name:            LoopSpillReloadCopies
DebugLoc:        { File: solver.c, Line: 39, Column: 2 }
Function:        vel_step
Args:
  - NumVRCopies:     '1'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '6.425000e+02'
  - String:          ' total copies cost '
  - String:          generated in loop
...
--- !Missed
Pass:            regalloc
Name:            LoopSpillReloadCopies
DebugLoc:        { File: solver.c, Line: 38, Column: 5 }
Function:        vel_step
Args:
  - NumSpills:       '3'
  - String:          ' spills '
  - TotalSpillsCost: '5.219118e+01'
  - String:          ' total spills cost '
  - NumReloads:      '8'
  - String:          ' reloads '
  - TotalReloadsCost: '1.846765e+02'
  - String:          ' total reloads cost '
  - NumVRCopies:     '4'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '7.027206e+02'
  - String:          ' total copies cost '
  - String:          generated in loop
...
--- !Missed
Pass:            regalloc
Name:            LoopSpillReloadCopies
DebugLoc:        { File: solver.c, Line: 39, Column: 2 }
Function:        vel_step
Args:
  - NumVRCopies:     '1'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '6.425000e+02'
  - String:          ' total copies cost '
  - String:          generated in loop
...
--- !Missed
Pass:            regalloc
Name:            LoopSpillReloadCopies
DebugLoc:        { File: solver.c, Line: 38, Column: 5 }
Function:        vel_step
Args:
  - NumSpills:       '1'
  - String:          ' spills '
  - TotalSpillsCost: '3.211765e+01'
  - String:          ' total spills cost '
  - NumReloads:      '7'
  - String:          ' reloads '
  - TotalReloadsCost: '1.646029e+02'
  - String:          ' total reloads cost '
  - NumVRCopies:     '5'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '7.227941e+02'
  - String:          ' total copies cost '
  - String:          generated in loop
...
--- !Missed
Pass:            regalloc
Name:            SpillReloadCopies
DebugLoc:        { File: solver.c, Line: 130, Column: 1 }
Function:        vel_step
Args:
  - NumSpills:       '11'
  - String:          ' spills '
  - TotalSpillsCost: '9.130882e+01'
  - String:          ' total spills cost '
  - NumReloads:      '17'
  - String:          ' reloads '
  - TotalReloadsCost: '3.512794e+02'
  - String:          ' total reloads cost '
  - NumVRCopies:     '14'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '1.428897e+03'
  - String:          ' total copies cost '
  - String:          generated in function
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: solver.c, Line: 131, Column: 0 }
Function:        vel_step
Args:
  - NumStackBytes:   '136'
  - String:          ' stack bytes in function'
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '17'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 14, Column: 32 }
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '6'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 15, Column: 9 }
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '1'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '8'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 15, Column: 20 }
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 15, Column: 22 }
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '8'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 14, Column: 5 }
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '1'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '7'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 15, Column: 22 }
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 15, Column: 9 }
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '1'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '8'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 15, Column: 20 }
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 15, Column: 22 }
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '8'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 14, Column: 5 }
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '1'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '7'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 53, Column: 27 }
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '29'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '28'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '2'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '2'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 41, Column: 52 }
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '19'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 39, Column: 36 }
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '5'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 23, Column: 46 }
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '23'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '5'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '5'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '5'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '28'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 39, Column: 29 }
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '2'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '2'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 41, Column: 52 }
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '19'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 39, Column: 36 }
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '5'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 23, Column: 60 }
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '23'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '8'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 138, Column: 5 }
Function:        vel_step
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '35'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: solver.c, Line: 131, Column: 0 }
Function:        vel_step
Args:
  - NumInstructions: '364'
  - String:          ' instructions in function'
...
--- !Missed
Pass:            regalloc
Name:            LoopSpillReloadCopies
DebugLoc:        { File: solver.c, Line: 112, Column: 5 }
Function:        project
Args:
  - NumVRCopies:     '1'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '6.501429e+02'
  - String:          ' total copies cost '
  - String:          generated in loop
...
--- !Missed
Pass:            regalloc
Name:            LoopSpillReloadCopies
DebugLoc:        { File: solver.c, Line: 111, Column: 9 }
Function:        project
Args:
  - NumVRCopies:     '1'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '6.501429e+02'
  - String:          ' total copies cost '
  - String:          generated in loop
...
--- !Missed
Pass:            regalloc
Name:            LoopSpillReloadCopies
DebugLoc:        { File: solver.c, Line: 39, Column: 2 }
Function:        project
Args:
  - NumVRCopies:     '1'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '6.501429e+02'
  - String:          ' total copies cost '
  - String:          generated in loop
...
--- !Missed
Pass:            regalloc
Name:            LoopSpillReloadCopies
DebugLoc:        { File: solver.c, Line: 38, Column: 5 }
Function:        project
Args:
  - NumSpills:       '1'
  - String:          ' spills '
  - TotalSpillsCost: '2.028572e+01'
  - String:          ' total spills cost '
  - NumReloads:      '14'
  - String:          ' reloads '
  - TotalReloadsCost: '3.937143e+02'
  - String:          ' total reloads cost '
  - NumVRCopies:     '3'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '6.907143e+02'
  - String:          ' total copies cost '
  - String:          generated in loop
...
--- !Missed
Pass:            regalloc
Name:            LoopSpillReloadCopies
DebugLoc:        { File: solver.c, Line: 99, Column: 5 }
Function:        project
Args:
  - NumVRCopies:     '1'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '6.501429e+02'
  - String:          ' total copies cost '
  - String:          generated in loop
...
--- !Missed
Pass:            regalloc
Name:            LoopSpillReloadCopies
DebugLoc:        { File: solver.c, Line: 98, Column: 9 }
Function:        project
Args:
  - NumVRCopies:     '1'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '6.501429e+02'
  - String:          ' total copies cost '
  - String:          generated in loop
...
--- !Missed
Pass:            regalloc
Name:            SpillReloadCopies
DebugLoc:        { File: solver.c, Line: 95, Column: 1 }
Function:        project
Args:
  - NumSpills:       '14'
  - String:          ' spills '
  - TotalSpillsCost: '3.328571e+01'
  - String:          ' total spills cost '
  - NumReloads:      '36'
  - String:          ' reloads '
  - TotalReloadsCost: '4.134286e+02'
  - String:          ' total reloads cost '
  - NumVRCopies:     '17'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '1.998809e+03'
  - String:          ' total copies cost '
  - String:          generated in function
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: solver.c, Line: 96, Column: 0 }
Function:        project
Args:
  - NumStackBytes:   '48'
  - String:          ' stack bytes in function'
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        project
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '9'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 101, Column: 75 }
Function:        project
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '10'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 101, Column: 40 }
Function:        project
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '2'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 100, Column: 38 }
Function:        project
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '20'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 98, Column: 9 }
Function:        project
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '5'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 24, Column: 11 }
Function:        project
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '9'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 23, Column: 58 }
Function:        project
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '22'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        project
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 29, Column: 37 }
Function:        project
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '37'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 22, Column: 5 }
Function:        project
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 23, Column: 58 }
Function:        project
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '21'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        project
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '34'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        project
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '28'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 98, Column: 36 }
Function:        project
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '2'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        project
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        project
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '2'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 41, Column: 32 }
Function:        project
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '18'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 39, Column: 36 }
Function:        project
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        project
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '7'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 23, Column: 58 }
Function:        project
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '22'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        project
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '7'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 113, Column: 35 }
Function:        project
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '8'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 114, Column: 42 }
Function:        project
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '2'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 113, Column: 40 }
Function:        project
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '21'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 111, Column: 9 }
Function:        project
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '5'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 22, Column: 5 }
Function:        project
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '7'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 23, Column: 46 }
Function:        project
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '23'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        project
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '5'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 29, Column: 37 }
Function:        project
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '27'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 22, Column: 5 }
Function:        project
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '6'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: solver.c, Line: 23, Column: 60 }
Function:        project
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '23'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        project
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '2'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        project
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '31'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: solver.c, Line: 96, Column: 0 }
Function:        project
Args:
  - NumInstructions: '430'
  - String:          ' instructions in function'
...
