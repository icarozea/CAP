#Resumen de Pragmas OpenMP
#pragma omp parallel
Clausulas: 
    num_threads(N)
    if(var-list)
    shared(var-list)
    private(var-list)
    firstprivate(var-list)
    default(none|shared|private|firstprivate)
    threadprivate
    lastprivate(var-list)
    reduction(var-list)
#pragma omp for  - (Do/For) Paralelismo de datos
Clausulas:
    private(var-list)
    shared(var-list)
    lastprivate(var-list)
    firstprivate(var-list)
    reduction(+:sum)
    nowait # se salta la barrera al final del bucle
    collapse # Distribuye el trabajo en bucles anidados
    schedule - Opciones:
        STATIC # chunk (trozos) de igual tamaño
        STATIC, chunk #Se divide en trozos de tamaño N
        DYNAMIC, chunk # se divide de forma automatica, chunk=1 por defecto
        GUIDE, chunk #El tamaño de los trozos se reduce con los hilos
        AUTO
        RUNTIME #usa las variables OMP_SCHEDULE API omp_set_schedule()

#pragma omp sections - para crear secciones de código concurrente entre hilos (Paralelismo funcional)
                    #- Cada sección se distruye en los hilos disponibles, Conllevan barrera implícita
Clausulas:
    private(var-list)
    lastprivate(var-list)
    firstprivate(var-list)
    reduction(+:sum)
    nowait

#pragma omp single - Para expresar una región secuencial dentro de una región paralela (Serializa la sección del codigo)
                  #- Un hilo ejecuta una sección de código, Conlleva un barrier implícito
Clausulas:
    private(var-list)
    firstprivate(var-list)
    nowait

